# NB: This file will be autogenerated in the future. Currently hand-crafted.
# Interpolation methods for one and two dimensions.

licenses(["notice"])

package(default_visibility = ["//tf_quant_finance:__subpackages__"])

py_library(
    name = "linear",
    srcs = ["__init__.py"],
    deps = [
        ":linear_interpolation_wrapper",
    ],
)

# Building a TF kernel in the open-source recommended way.

cc_binary(
    name = "_linear_interpolation.so",
    srcs = [
        "linear_interpolation.cc",
    ],
    copts = [
        "-pthread",
        "-std=c++11",
        "-D_GLIBCXX_USE_CXX11_ABI=0",
    ],
    linkshared = 1,
    deps = [
        "@local_config_tf//:libtensorflow_framework",
        "@local_config_tf//:tf_header_lib",
    ],
)

py_library(
    name = "gen_linear_interpolation",
    srcs = ([
        "gen_linear_interpolation.py",
    ]),
    data = [
        ":_linear_interpolation.so",
    ],
    srcs_version = "PY2AND3",
)

py_library(
    name = "linear_interpolation_wrapper",
    srcs = ["linear_interpolation_wrapper.py"],
    srcs_version = "PY2AND3",
    deps = [
        ":gen_linear_interpolation",
        # tensorflow dep,
        # framework_for_generated_wrappers_v2 tf_python_dep,
    ],
)

py_test(
    name = "linear_interpolation_wrapper_test",
    size = "small",
    srcs = ["linear_interpolation_wrapper_test.py"],
    #shard_count = 3,
    deps = [
        ":linear",
    ],
)

# The pure python-TF implementation for comparison etc.
py_library(
    name = "linear_interpolation",
    srcs = ["linear_interpolation.py"],
)
